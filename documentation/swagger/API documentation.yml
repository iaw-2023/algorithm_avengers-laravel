openapi: 3.0.3
info:
  title: API Manos Argentinas - Tienda Online
  description: |-
    API oficial de la tienda online de Manos Argentinas de Algorith Avengers
    
    Nuestra ropa no te cambia, te muestra tal cual sos
    
    Some useful links:
    - [Repositorio de Manos Argentinas - Tienda Online](https://github.com/iaw-2023/algorithm_avengers-laravel.git)
    - [Código fuente de la documentación de la API](https://github.com/iaw-2023/algorithm_avengers-laravel/blob/view_modifications/documentation/swagger/API%20documentation.yml)
  
  contact:
    email: algorithm.avengers.iaw@gmail.com
  license:
    name: MIT license
    url: https://opensource.org/license/mit/
  version: "1"

servers:
  - url: https://vercel.com/dalo12/tienda-manos-argentinas
tags:
  - name: productos
    description: Accede a los productos
  - name: categorias
    description: Accede a las categorías de los productos
  - name: clientes
    description: Operaciones relacionadas a las cuentas de los clientes
  - name: compras
    description: Operaciones relacionadas a las compras
paths:
  /productos:
    get:
      tags:
        - productos
      summary: Muestra todos los productos
      description: Muestra la información de todos los productos junto con la información de su categoría asociada
      responses:
        '200':
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
        default:
          description: Unexpected error

  /productos/{id}:
    get:
      tags:
        - productos
      summary: Muestra la información de un producto
      description: Dado un id válido de un producto, muestra la información de este producto junto con la información de su categoría asociada
      parameters:
        - name: id
          in: path
          description: ID del producto buscado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Producto'
        '404':
          description: ID no encontrado. Probablemente se haya ingresado un ID no válido.
        default:
          description: Unexpected error

  /categorias:
    get:
      tags:
        - categorias
      summary: Devuelve todas las categorías
      description: Devuelve todas las categorías posibles para los productos
      responses:
        '200':
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categoria'
        default:
          description: Unexpected error
  
  /categorias/{id}:
    get:
      tags:
        - categorias
      summary: Devuelve la categoría con el id especificado
      description: Dado un id, devuelve la categoría correspondiente a ese id
      parameters:
        - name: id
          in: path
          description: ID de la categoría buscada
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operación realizada con éxito
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Categoria'
        '404':
          description: ID no encontrado. Probablemente se haya ingresado un ID no válido.
        default:
          description: Unexpected error

  /clientes:
    get:
      tags:
        - clientes
      summary: Devuelve todos los clientes
      description: Devuelve todos los clientes registrados en el sistema
      responses:
        '200':
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'
        default:
          description: Unexpected error

    post:
      tags:
        - clientes
      summary: Almacena un nuevo cliente en el sistema
      description: Almacena un nuevo cliente en el sistema y lo retorna
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientePut'
          application/xml:
            schema:
              $ref: '#/components/schemas/ClientePut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientePut'
      responses:
        '200':
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Cliente'
        default:
          description: Unexpected error

  /clientes/{id}:
    get:
      tags:
        - clientes
      summary: Devuelve el cliente con el id especificado
      description: Dado un id, devuelve el cliente correspondiente a ese id
      parameters:
        - name: id
          in: path
          description: ID del cliente buscado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Cliente'
        '404':
          description: ID no encontrado. Probablemente se haya ingresado un ID no válido.
        default:
          description: Unexpected error
    put:
      tags:
        - clientes
      summary: Modifica los datos del cliente con el id especificado
      description: Dado un id, modifica los datos del cliente correspondiente a ese id y lo retorna
      parameters:
        - name: id
          in: path
          description: ID del cliente a modificar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientePut'
          application/xml:
            schema:
              $ref: '#/components/schemas/ClientePut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientePut'
      responses:
        '200':
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Cliente'
        '404':
          description: ID no encontrado. Probablemente se haya ingresado un ID no válido.        
        default:
          description: Unexpected error
    delete:
      tags:
        - clientes
      summary: Elimina el cliente con el id especificado
      description: Dado un id, lo elimina
      parameters:
        - name: id
          in: path
          description: ID del cliente a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operación realizada con éxito
        '404':
          description: ID no encontrado. Probablemente se haya ingresado un ID no válido.  
        default:
          description: Unexpected error

  /compras:
    get:
      tags:
        - compras
      summary: Devuelve todos las compras
      description: Devuelve todas las compras efectuadas hasta el momento
      responses:
        '200':
          description: Operación realizada con éxito
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Compra'
        default:
          description: Unexpected error
    post:
      tags:
        - compras
      summary: Almacena una nueva compra en el sistema
      description: Almacena una nueva compra en el sistema y la retorna
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompraPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompraPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompraPost'
      responses:
        '200':
          description: Operación realizada con éxito
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Compra'
        default:
          description: Unexpected error

  /compras/{id}:
    get:
      tags:
        - compras
      summary: Devuelve la compra con el id especificado
      description: Dado un id, devuelve la compra correspondiente a ese id
      parameters:
        - name: id
          in: path
          description: ID de la compra buscada
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operación realizada con éxito
          content: 
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Compra'
        '404':
          description: ID no encontrado. Probablemente se haya ingresado un ID no válido.
        default:
          description: Unexpected error


components:
  schemas:
    Producto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        nombre:
          type: string
          example: "Buzo Rebelde"
        descripcion:
          type: string
          example: "Buzo estampado en la espalda"
        categoria:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/Categoria/properties/id'
            nombre: 
              $ref: '#/components/schemas/Categoria/properties/nombre'
      xml:
        name: productos

    Categoria:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 3
        nombre:
          type: string
          example: "Masculinidades"
        descripcion:
          type: string
          example: "Ropa diseñada para masculinidades"
      xml:
          name: categorias

    Cliente:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        email:
          type: string
          format: email
          example: "juan_gonzález@example.com"
        nombre:
          type: string
          example: "Juan González"
        telefono:
          type: string
          example: "+54 1 111 111 1111"
        domicilio:
          type: string
          example: "San Martín 1810"
      xml:
        name: clientes

    ClientePut:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        email:
          type: string
          format: email
          example: "juan_gonzález@example.com"
        contrasena:
          type: string
          example: "2af329f4923f1ccde3cbaeb949e3fe32"
          description: Contraseña codificada en md5
        nombre:
          type: string
          example: "Juan González"
        telefono:
          type: string
          example: "+54 1 111 111 1111"
        domicilio:
          type: string
          example: "San Martín 1810"
      xml:
        name: clientes

    Compra:
      type: object
      properties:
        id: 
          type: integer
          format: int64
          example: 1
        precio:
          type: number
          multipleOf: 0.01
          example: 12345.67
        fecha:
          type: string
          format: date
        direccion_entrega:
          type: string
          example: Belgrano 1812
        detalle:
          type: array
          items:
            $ref: '#/components/schemas/DetalleOrden'
        cliente:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/Cliente/properties/id'
            email:
              $ref: '#/components/schemas/Cliente/properties/email'
            nombre:
              $ref: '#/components/schemas/Cliente/properties/nombre'
      xml:
        name: compra

    CompraPost:
      type: object
      properties:
        id_cliente:
          $ref: '#/components/schemas/Cliente/properties/id'
        direccion_entrega:
          type: string
          example: Juan Manuel de Rosas 1845
        detalle:
          type: array
          items:
            type: object
            properties:
              id_producto:
                $ref: '#/components/schemas/Producto/properties/id'
              cantidad:
                type: integer
                format: int64
                example: 3
      xml:
        name: compra_post

    DetalleOrden:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 4
        id_producto:
          $ref: '#/components/schemas/Producto/properties/id'
        cantidad:
          type: integer
          format: int64
          example: 2
        nombre_producto:
          $ref: '#/components/schemas/Producto/properties/nombre'
      xml:
        name: detalle_orden

    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'